Get Min from Stack
Difficulty: MediumAccuracy: 22.59%Submissions: 268K+Points: 4Average Time: 30m
Given q queries, You task is to implement the following four functions for a stack:

push(x) – Insert an integer x onto the stack.
pop() – Remove the top element from the stack.
peek() - Return the top element from the stack. If the stack is empty, return -1.
getMin() – Retrieve the minimum element from the stack in O(1) time. If the stack is empty, return -1.
Each query can be one of the following:

1 x : Push x onto the stack.
2 : Pop the top element from the stack.
3: Return the top element from the stack. If the stack is empty, return -1.
4: Return the minimum element from the stack.
SOLUTION:
class Solution {
    Stack<Integer> st=new Stack<>();
    Stack<Integer> st1= new Stack<>();
    public Solution() {}

    // Add an element to the top of Stack
    public void push(int x) {
        // code here
        st.push(x);
        if(st1.isEmpty()|| x<=st1.peek()){
            st1.push(x);
        }
    }

    // Remove the top element from the Stack
    public void pop() {
        // code here
        if(!st.isEmpty()){
            int popp= st.pop();
            if(!st1.isEmpty() && popp==st1.peek()){
                st1.pop();
            }
        }
    }

    // Returns top element of the Stack
    public int peek() {
        // code here
        return st.isEmpty()?-1:st.peek();
    }

    // Finds minimum element of Stack
    public int getMin() {
        // code here
        return st1.isEmpty()?-1:st1.peek();
    }
}