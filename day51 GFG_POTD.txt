K Sized Subarray Maximum
Difficulty: MediumAccuracy: 26.04%Submissions: 376K+Points: 4
Given an array arr[] of integers and an integer k, your task is to find the maximum value for each contiguous subarray of size k. The output should be an array of maximum values corresponding to each contiguous subarray.
SOLUTION:
class Solution {
    public ArrayList<Integer> maxOfSubarrays(int arr[], int k) {
        // code here
        if(arr==null || k<=0) return new ArrayList<>();
        int n = arr.length;
        ArrayList<Integer> result=new ArrayList<>(); // Result array to store max of each window
        Deque<Integer> deque = new LinkedList<>(); // Deque to store indices

        for (int i = 0; i < n; i++) {
            // Remove elements that are out of this window
            if (!deque.isEmpty() && deque.peekFirst() < i - k + 1) {
                deque.pollFirst();
            }

            // Remove elements that are smaller than current element (they are useless)
            while (!deque.isEmpty() && arr[deque.peekLast()] < arr[i]) {
                deque.pollLast();
            }

            // Add the current element index to the deque
            deque.offerLast(i);

            // Store max of this window in result (starts from index k-1)
            if (i >= k - 1) {
                result.add(arr[deque.peekFirst()]);
            }
        }
        return result;
    }
}