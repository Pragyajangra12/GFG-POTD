Longest Palindromic Subsequence
Difficulty: MediumAccuracy: 56.57%Submissions: 101K+Points: 4
Given a string s, return the length of the longest palindromic subsequence.

A subsequence is a sequence that can be derived from the given sequence by deleting some or no elements without changing the order of the remaining elements.

A palindromic sequence is a sequence that reads the same forward and backward.
SOLUTION:
class Solution {
    public int longestPalinSubseq(String s) {
        // code here
        int n = s.length();
        
        // dp[i][j] will store the length of longest palindromic subsequence in s[i...j]
        int[][] dp = new int[n][n];
        
        // Base case: every individual character is a palindrome of length 1
        for (int i = 0; i < n; i++) {
            dp[i][i] = 1;
        }
        
        // Fill the dp table
        for (int length = 2; length <= n; length++) { // length is the length of the current substring
            for (int i = 0; i <= n - length; i++) {
                int j = i + length - 1; // j is the end index of the current substring
                
                if (s.charAt(i) == s.charAt(j)) {
                    dp[i][j] = dp[i + 1][j - 1] + 2;
                } else {
                    dp[i][j] = Math.max(dp[i + 1][j], dp[i][j - 1]);
                }
            }
        }
        
        // The answer will be in dp[0][n-1], which is the longest palindromic subsequence of the entire string
        return dp[0][n - 1];
    }
}